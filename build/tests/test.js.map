{"version":3,"sources":["../../app/tests/test.js"],"names":["should","chai","use","chaiHttp","describe","it","done","request","app","get","end","err","res","have","status","be","json","body","a","property","equal","records","id","post","send","data","title","createdBy","type","location","comment","patch","newData","delete"],"mappings":"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","file":"test.js","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport app from '../app';\nimport Redflags from '../controllers/red_flags';\nimport db from '../models/dbaseSchema';\nconst should = chai.should();\n\nchai.use(chaiHttp);\n\n\ndescribe('Redflags /GET', () => {\n  it('should GET all the records', (done) => {\n      chai.request(app)\n        .get('/api/v1/record/red-flags')\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.should.be.json;\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').equal('Redflags records retrieved');\n        done();\n        });\n    });\n  });\n\n  describe('Redflags /GET/:id', () => {\n    it('should GET a redflag record by its id', (done) => {\n      chai.request(app)\n          .get('/api/v1/record/red-flags/:id')\n          .end((err, res) => {\n            res.should.have.status(200);\n            res.body.should.be.a('object');\n            res.body.should.have.property('data');\n            res.body.should.have.property('message').equal('Red-flag record retrieved successfully');\n            done();\n          });\n      });\n\n      it('returns status 404 when id is not found', (done) => {\n        const records = {\n          id: 'Not present'\n        }\n        chai.request(app)\n          .get('/api/v1/record/red-flags' + records.id)\n          .end((err, res) => {\n          res.should.have.status(404);\n          done();\n        });\n      });\n  });\n\n  describe('Redflags /POST', () => {\n    it('should add a new redflag record', (done) => {\n      chai.request(app)\n        .post('/api/v1/record/red-flags')\n        .send({\n          'title': 'title',\n          'createdBy': 'segun',\n          'type': 'redflag',\n          'location': '102, 111',\n          'status': 'under investigation',\n          'Images': ' ',\n          'Video': ' ',\n          'comment': 'New comment'\n        })\n        .end((err, res) => {\n          res.should.have.status(201);\n          res.should.be.json;\n          res.body.should.be.a('object');\n          res.body.should.have.property('data');\n          res.body.data.should.be.a('object');\n          res.body.data.should.have.property('title');\n          res.body.data.title.should.equal('title');\n          res.body.data.should.have.property('createdBy');\n          res.body.data.createdBy.should.equal('James');\n          res.body.data.should.have.property('type');\n          res.body.data.type.should.equal('redflag');\n          res.body.data.should.have.property('location');\n          res.body.data.location.should.equal('102, 111');\n          res.body.data.should.have.property('comment');\n          res.body.data.comment.should.equal('New comment');\n          done();\n        });\n    }); \n\n    it('should return error when any of the field is empty', (done) => {\n      chai.request(app)\n      .post('/api/v1/record/red-flags')\n        .send({\n          ' ': ' '\n        })\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.should.be.json;\n          res.body.should.have.property('error').equal('All fields are required!');\n          done();\n        });\n    });\n  });\n\n  describe('Redflag /PATCH', () => {\n    it('should update location of a redflag record', (done) => {\n      const records = {\n        id: id,\n      }\n      chai.request(app)\n        .get('/api/v1/record/red-flags')\n        .end((err, res) => {\n          chai.request(app)\n            .patch(`/api/v1/record/red-flags/${id}/location`)\n            .send({'location': '92, 113'})\n            .end((err, res) => {\n              res.should.have.status(201);\n              res.should.be.json;\n              res.body.should.be.a('object');\n              res.body.should.have.property('newData');\n              res.body.newData.should.be.a('object');\n              res.body.newData.should.have.property('location');\n              res.body.newData.location.should.equal('92, 113');\n              done();\n            });\n        });\n    });\n\n    it('should update comment of a redflag record', (done) => {\n      const records = {\n        id: id,\n      }\n      chai.request(app)\n        .get('/api/v1/record/record/red-flags')\n        .end((err, res) => {\n          chai.request(app)\n            .patch(`/api/v1/record/red-flags/${id}/comment`)\n            .send({'comment': 'new comment'})\n            .end((err, res) => {\n              res.should.have.status(201);\n              res.body.should.be.a('object');\n              res.body.should.have.property('newData');\n              res.body.newData.should.have.property('comment');\n              res.body.newData.comment.should.equal('new comment');\n              done();\n            });\n        });\n    });\n\n    it('should return error when location field is empty', (done) => {\n      chai.request(app)\n      .get('/api/v1/record/location/red-flags')\n        .end((err, res) => {\n          chai.request(app)\n            .patch('/api/v1/record/red-flags/1/location')\n            .send({' ': ' ' })\n            .end((err, res) => {\n              res.should.have.status(400);\n              res.body.should.have.property('error').equal('location field is required');\n              done();\n            });\n        });\n\n    });\n\n    it('should return error when comment field is empty', (done) => {\n      chai.request(app)\n      .get('/api/v1/record/location/red-flags')\n        .end((err, res) => {\n          chai.request(app)\n            .patch('/api/v1/record/red-flags/1/comment')\n            .send({' ': ' '})\n            .end((err, res) => {\n              res.should.have.status(400);\n              res.body.should.have.property('error').equal('This field is required');\n              done();\n            });\n        });\n    });\n  });\n\n  describe('Redflag /DELETE', () => {\n    it('shoud delete the record from the database', (done) => {\n      const records = {\n        id: id,\n      }\n      chai.request(app)\n      .get('/api/v1/record/red-flags')\n      .end((err, res) => {\n        chai.request(app)\n          .delete(`/api/v1/record/red-flags/${id}`)\n          .end((err, res) => {\n            res.should.have.status(200);\n            res.should.be.json;\n            res.body.should.have.property('message').equal('The record deleted successfully');\n            done();\n          });\n      });\n    });\n\n    it('should return an error if the id is not found', (done) => {\n      chai.request(app)\n        .post('/api/v1/record/red-flags')\n        .end((err, res) => {\n          chai.request(app)\n          .delete('/api/v1/record/red-flags')\n          .end((err, res) => {\n            res.should.have.status(404);\n            done();\n          });\n        });\n    });\n  });\n"]}