{"version":3,"sources":["../../app/models/query.js"],"names":["dotenv","config","pool","Pool","connectionString","process","env","DATABASE_URL","query","text","params","Promise","resolve","reject","then","res","catch","err"],"mappings":";;;;;;AAAA;;AACA;;;;;;AAEAA,iBAAOC,MAAP;;AAEA,IAAMC,OAAO,IAAIC,QAAJ,CAAS;AACpBC,oBAAkBC,QAAQC,GAAR,CAAYC;AADV,CAAT,CAAb;;kBAIe;AACbC,OADa,iBACPC,IADO,EACDC,MADC,EACO;AAClB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCX,WAAKM,KAAL,CAAWC,IAAX,EAAiBC,MAAjB,EACGI,IADH,CACQ,UAACC,GAAD,EAAS;AACbH,gBAAQG,GAAR;AACD,OAHH,EAIGC,KAJH,CAIS,UAACC,GAAD,EAAS;AACdJ,eAAOI,GAAP;AACD,OANH;AAOD,KARM,CAAP;AASD;AAXY,C","file":"query.js","sourcesContent":["import { Pool } from 'pg';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst pool = new Pool({\n  connectionString: process.env.DATABASE_URL,\n});\n\nexport default {\n  query(text, params) {\n    return new Promise((resolve, reject) => {\n      pool.query(text, params)\n        .then((res) => {\n          resolve(res);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  },\n};\n"]}