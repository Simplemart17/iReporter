{"version":3,"sources":["../../app/models/createTable.js"],"names":["dotenv","config","pool","Pool","connectionString","process","env","DATABASE_URL","on","console","log","createUserTable","queryText","query","dropUsersTable","createRecordsTable","dropRecordsTable","exit","createAllTables","dropAllTables"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAEAA,iBAAOC,MAAP;;AAEA,IAAMC,OAAO,IAAIC,QAAJ,CAAS;AACpBC,oBAAkBC,QAAQC,GAAR,CAAYC;AADV,CAAT,CAAb;AAGA;;AAEAL,KAAKM,EAAL,CAAQ,SAAR,EAAmB,YAAM;AACvBC,UAAQC,GAAR,CAAY,uBAAZ;AACD,CAFD;AAGA;;AAEA;AACA,IAAMC,kBAAkB,SAAlBA,eAAkB,GAAM;AAC5B,MAAMC,saAAN;AAaAV,OAAKW,KAAL,CAAWD,SAAX;AACD,CAfD;;AAiBA,IAAME,iBAAiB,SAAjBA,cAAiB,GAAM;AAC3B,MAAMF,YAAY,kBAAlB;AACAV,OAAKW,KAAL,CAAWD,SAAX;AACD,CAHD;;AAKA;AACA,IAAMG,qBAAqB,SAArBA,kBAAqB,GAAM;AAC/B,MAAMH,sbAAN;AAcAV,OAAKW,KAAL,CAAWD,SAAX;AACD,CAhBD;;AAkBA,IAAMI,mBAAmB,SAAnBA,gBAAmB,GAAM;AAC7B,MAAMJ,YAAY,oBAAlB;AACAV,OAAKW,KAAL,CAAWD,SAAX;AACD,CAHD;;AAKAV,KAAKM,EAAL,CAAQ,QAAR,EAAkB,YAAM;AACtBC,UAAQC,GAAR,CAAY,gBAAZ;AACAL,UAAQY,IAAR,CAAa,CAAb;AACD,CAHD;;AAKA,IAAMC,kBAAkB,SAAlBA,eAAkB,GAAM;AAC5BP,qBACAI,oBADA;AAED,CAHD;;AAKA,IAAMI,gBAAgB,SAAhBA,aAAgB,GAAM;AAC1BL,oBACAE,kBADA;AAED,CAHD;;QAMEL,e,GAAAA,e;QACAG,c,GAAAA,c;QACAC,kB,GAAAA,kB;QACAC,gB,GAAAA,gB;QACAE,e,GAAAA,e;QACAC,a,GAAAA,a","file":"createTable.js","sourcesContent":["import { Pool }  from 'pg';\r\nimport dotenv  from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\nconst pool = new Pool({\r\n  connectionString: process.env.DATABASE_URL,\r\n});\r\n// console.log(process.env.DATABASE_URL);\r\n\r\npool.on('connect', () => {\r\n  console.log('connected to database');\r\n});\r\n// pool.connect();\r\n\r\n// Create Users Table\r\nconst createUserTable = () => {\r\n  const queryText = `CREATE TABLE IF NOT EXISTS\r\n  users(\r\n    id SERIAL PRIMARY KEY,\r\n    firstname VARCHAR(128) NOT NULL,\r\n    lastname VARCHAR(128) NOT NULL,\r\n    othername VARCHAR(128) NOT NULL,\r\n    email VARCHAR(128) UNIQUE NOT NULL,\r\n    phoneNumber BIGINT,\r\n    username VARCHAR(128) UNIQUE NOT NULL,\r\n    registered DATE DEFAULT CURRENT_DATE,\r\n    password VARCHAR(128) NOT NULL,\r\n    isAdmin BOOLEAN default FALSE\r\n  );`;\r\n  pool.query(queryText)\r\n};\r\n\r\nconst dropUsersTable = () => {\r\n  const queryText = 'DROP TABLE users';\r\n  pool.query(queryText)\r\n};\r\n\r\n// Table for records\r\nconst createRecordsTable = () => {\r\n  const queryText = `CREATE TABLE IF NOT EXISTS\r\n  records(\r\n    id SERIAL PRIMARY KEY,\r\n    createdOn DATE DEFAULT CURRENT_DATE,\r\n    title VARCHAR(255) NOT NULL,\r\n    createdBy INTEGER NOT NULL,\r\n    type VARCHAR(128) NOT NULL,\r\n    location VARCHAR(128) NOT NULL,\r\n    status VARCHAR(128),\r\n    images VARCHAR(128),\r\n    videos VARCHAR(128),\r\n    comment TEXT NOT NULL,\r\n    FOREIGN KEY (createdBy) REFERENCES users (id) ON DELETE CASCADE\r\n);`;\r\n  pool.query(queryText)\r\n};\r\n\r\nconst dropRecordsTable = () => {\r\n  const queryText = 'DROP TABLE records';\r\n  pool.query(queryText)\r\n};\r\n\r\npool.on('remove', () => {\r\n  console.log('client removed');\r\n  process.exit(0);\r\n});\r\n\r\nconst createAllTables = () => {\r\n  createUserTable(),\r\n  createRecordsTable()\r\n};\r\n\r\nconst dropAllTables = () => {\r\n  dropUsersTable(),\r\n  dropRecordsTable()\r\n};\r\n\r\nexport {\r\n  createUserTable,\r\n  dropUsersTable,\r\n  createRecordsTable,\r\n  dropRecordsTable,\r\n  createAllTables,\r\n  dropAllTables\r\n};\r\n"]}