{"version":3,"sources":["../../app/middleware/Auth.js"],"names":["Auth","verifyToken","req","res","next","token","headers","status","send","message","decoded","jwt","verify","process","env","SECRET","text","db","query","userId","rows","row","user","id","error"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,OAAO;AACLC,aADK,6BACOC,GADP,EACYC,GADZ,EACiBC,IADjB,EACuB;AAChC,QAAMC,QAAQH,IAAII,OAAJ,CAAY,gBAAZ,CAAd;AACA,QAAI,CAACD,KAAL,EAAY;AACV,aAAOF,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,uBAAX,EAArB,CAAP;AACD;AACD,QAAI;AACF,UAAMC,UAAU,MAAMC,uBAAIC,MAAJ,CAAWP,KAAX,EAAkBQ,QAAQC,GAAR,CAAYC,MAA9B,CAAtB;AACA,UAAMC,OAAO,kCAAb;;AAFE,iBAGe,MAAMC,aAAGC,KAAH,CAASF,IAAT,EAAe,CAACN,QAAQS,MAAT,CAAf,CAHrB;AAAA,UAGMC,IAHN,QAGMA,IAHN;;AAIF,UAAI,CAACC,IAAI,CAAJ,CAAL,EAAa;AACX,eAAOlB,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,mCAAX,EAArB,CAAP;AACD;AACDP,UAAIoB,IAAJ,GAAW,EAAEC,IAAIb,QAAQS,MAAd,EAAX;AACAf;AACD,KATD,CAUA,OAAOoB,KAAP,EAAc;AACZ,aAAOrB,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBgB,KAArB,CAAP;AACD;AACF;AAnBU,CAAb;;kBAsBexB,I","file":"Auth.js","sourcesContent":["import jwt from 'jsonwebtoken';\nimport db from '../../db';\n\nconst Auth = {\n  async verifyToken(req, res, next) {\n    const token = req.headers['x-access-token'];\n    if (!token) {\n      return res.status(400).send({ message: 'Token is not provided' });\n    }\n    try {\n      const decoded = await jwt.verify(token, process.env.SECRET);\n      const text = 'SELECT * FROM user WHERE id = $1';\n      const { rows } = await db.query(text, [decoded.userId]);\n      if (!row[0]) {\n        return res.status(400).send({ message: 'The token you provided is invalid' });\n      }\n      req.user = { id: decoded.userId };\n      next();\n    }\n    catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n};\n\nexport default Auth;\n"]}