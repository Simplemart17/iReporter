{"version":3,"sources":["../../app/middleware/validation.js"],"names":["Validation","req","res","next","error","whiteSpace","body","comment","title","type","location","isAdmin","match","length","status","json","numReg","RegExp","validEmail","firstname","lastname","othername","email","phoneNumber","username","password"],"mappings":"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","file":"validation.js","sourcesContent":["class Validation {\r\n\r\n  // validation for records creation\r\n  static input(req, res, next) {\r\n    let error = '';\r\n    let whiteSpace = /^\\s+$/g;\r\n    const { comment, title, type, location, isAdmin } = req.body;\r\n    if (!comment || comment.match(whiteSpace)) {\r\n      error = 'Comment field cannot be empty';\r\n    } else if (comment.length < 20) {\r\n      error = 'Enter detailed description of the report';\r\n    } else if (!title || title.match(whiteSpace)) {\r\n      error = 'Title field cannot be empty';\r\n    } else if (!type || type === ' ') {\r\n      error = 'Select a type of records to be submitted';\r\n    } else if (!location || location.match(whiteSpace)) {\r\n      error = 'Location field is important!';\r\n    } else if (!isAdmin || isAdmin.match(whiteSpace)) {\r\n      req.body.isAdmin = 'false';\r\n    }\r\n    if (error) {\r\n      return res.status(400).json({error});\r\n    }\r\n    return next();\r\n  }\r\n\r\n  // validation for users signup and signin\r\n  static userSignUp(req, res, next) {\r\n    let error;\r\n    let whiteSpace = /^\\s+$/g;\r\n    let numReg = new RegExp(/^\\+[0-9]{13}$|^[0-9]{11}$/);\r\n    let validEmail = new RegExp(/\\S+@\\S+\\.\\S/);\r\n    const { firstname, lastname, othername, email, phoneNumber, username, password } = req.body;\r\n    if (!firstname || firstname.match(whiteSpace)) {\r\n      error = 'Firstname field cannot be empty';\r\n    } else if (!lastname || lastname.match(whiteSpace)) {\r\n      error = 'Enter your lastname';\r\n    } else if (!othername || othername.match(whiteSpace)) {\r\n      error = 'Enter your othername';\r\n    } else if (!phoneNumber || phoneNumber.match(whiteSpace)) {\r\n      error = 'Phone number is required!';\r\n    } else if (!username || username.match(whiteSpace)) {\r\n      error = 'Username is required!';\r\n    } else if (!password || password.match(whiteSpace)) {\r\n      error = 'Password field cannot be empty';\r\n    } else if (!email || email.match(whiteSpace)) {\r\n      error = 'Email field cannot be empty';\r\n    } else if (!phoneNumber.match(numReg)) {\r\n      error = 'Enter phone number in the right format'\r\n    } else if (!email.match(validEmail)) {\r\n      error = 'Enter a valid email address!'\r\n    }\r\n    if (error) {\r\n      return res.status(400).json({error});\r\n    }\r\n    return next();\r\n  }\r\n\r\n  static userSignIn(req, res, next) {\r\n    let error;\r\n    let whiteSpace = /^\\s+$/g;\r\n    let validEmail = new RegExp(/\\S+@\\S+\\.\\S/);\r\n    const { email, password } = req.body;\r\n    if (!email || email.match(whiteSpace)) {\r\n      error = 'email is required';\r\n    } else if (!password || password.match(whiteSpace)) {\r\n      error = 'Password field cannot be empty';\r\n    } else if (!email.match(validEmail)) {\r\n      error = 'Enter a valid email address!'\r\n    }\r\n    if (error) {\r\n      return res.status(400).json({error});\r\n    }\r\n    return next();\r\n  }\r\n}\r\nexport default Validation;\r\n"]}